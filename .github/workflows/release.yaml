name: Isar release

on:
  workflow_dispatch:
  push:

env: # Global variables
  DATABASE_UNIVERSE_VERSION: "0.0.4"
  
jobs:
  build_binaries:
    name: Build Binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            artifact_name: libdatabase_universe_android_arm64.so
            script: build_android.sh
          - os: macos-latest
            artifact_name: libdatabase_universe_android_armv7.so
            script: build_android.sh armv7
          - os: macos-latest
            artifact_name: libdatabase_universe_android_x64.so
            script: build_android.sh x64
          - os: macos-latest
            artifact_name: database_universe_ios.xcframework.zip
            script: build_ios.sh
          - os: ubuntu-24.04
            artifact_name: libdatabase_universe_linux_x64.so
            script: build_linux.sh x64
          - os: macos-latest
            artifact_name: libdatabase_universe_macos.dylib
            script: build_macos.sh
          # - os: windows-latest
          #   artifact_name: database_universe_windows_x64.dll
          #   script: build_windows.sh x64
          # - os: ubuntu-latest
          #   artifact_name: database_universe.wasm
          #   script: build_wasm.sh
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Prepare Build
        uses: ./.github/actions/prepare-build
      - name: Set Isar Version
        run: echo "DATABASE_UNIVERSE_VERSION=$DATABASE_UNIVERSE_VERSION" >> $GITHUB_ENV
      - name: Build binary
        run: bash tool/${{ matrix.script }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.artifact_name }}

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN_GITHUB }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          tag: "${{ github.ref }}-$DATABASE_UNIVERSE_VERSION"

  publish:
    name: Publish 
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: "${{ github.ref }}-$DATABASE_UNIVERSE_VERSION"
          running-workflow-name: "Publish"
          repo-token: ${{ secrets.TOKEN_GITHUB }}
          wait-interval: 10

      - name: Set Isar Version
        run: echo "DATABASE_UNIVERSE_VERSION=$DATABASE_UNIVERSE_VERSION" >> $GITHUB_ENV
      - name: Download Binaries
        run: sh tool/download_binaries.sh
      - name: Adjust Version
        run: find . -type f -exec sed -i "s/0.0.0-placeholder/$DATABASE_UNIVERSE_VERSION/g" {} +
      - name: pub.dev credentials
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_JSON }}' >> $HOME/.config/dart/pub-credentials.json
           
      - name: Publish database_universe
        run: |
          dart pub get
          dart pub publish --force
        working-directory: packages/database_universe
      - name: Publish database_universe_flutter_libs
        run: |
          flutter pub get
          flutter pub publish --force
        working-directory: packages/database_universe_flutter_libs
